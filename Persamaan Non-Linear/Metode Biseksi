def f(x):
    return x**3 - x - 2  

def bisection_method(a, b, tol, max_iter):
   
    if f(a) * f(b) >= 0:
        print("Tidak ada akar di dalam interval ini.")
        return None
    
    iterasi = 0
    tabel = []
    while iterasi < max_iter:
        c = (a + b) / 2  
        tabel.append([iterasi + 1, a, b, c, f(c)])  # Simpan iterasi, a, b, c, dan f(c)
        
        if abs(f(c)) < tol:
            break
        
       
        if f(a) * f(c) < 0:
            b = c
        else:
            a = c
        
        iterasi += 1

 
    print(f"{'Iterasi':<10} {'a':<10} {'b':<10} {'c':<10} {'f(c)':<10}")
    for row in tabel:
        print(f"{row[0]:<10} {row[1]:<10} {row[2]:<10} {row[3]:<10} {row[4]:<10}")

    return (a + b) / 2 


a = 1  
b = 2  
toleransi = 0.001  
maks_iterasi = 100  

akar = bisection_method(a, b, toleransi, maks_iterasi)
if akar is not None:
    print(f"Akar yang ditemukan: {akar}")
