import numpy as np

def gauss_seidel(A, b, x0, num_iter=10):
    n = len(b)
    x = x0.copy()
    
    for k in range(num_iter):  
        print(f"Iterasi ke-{k+1}:")
        for i in range(n):
            sigma = sum(A[i][j] * x[j] for j in range(n) if j != i)
            x[i] = (b[i] - sigma) / A[i][i]
        
        print("x =", ["{:.6f}".format(val) for val in x])
    return x

A = np.array([[10, -1, 2, 0],
              [-1, 11, -1, 3],
              [2, -1, 10, -1],
              [0, 3, -1, 8]], dtype=float)

b = np.array([6, 25, -11, 15], dtype=float)

x0 = np.zeros(len(b))

hasil = gauss_seidel_no_convergence_check(A, b, x0, num_iter=5)

print("Solusi terakhir iterasi:")
for i, val in enumerate(hasil):
    print(f"x{i+1} = {val:.6f}")
